import React, { useState } from 'react';
import { Card, Tabs, Table, Button, Space, DatePicker, Select, Row, Col, Statistic } from 'antd';
import { DownloadOutlined, FileExcelOutlined, FilePdfOutlined, PrinterOutlined } from '@ant-design/icons';
import "./Reports.scss";

const { TabPane } = Tabs;
const { RangePicker } = DatePicker;
const { Option } = Select;

const Reports = () => {
  const [dateRange, setDateRange] = useState(null);
  const [reportType, setReportType] = useState('all');

  const reportTypes = [
    { key: 'all', label: 'All Reports' },
    { key: 'financial', label: 'Financial Reports' },
    { key: 'occupancy', label: 'Occupancy Reports' },
    { key: 'maintenance', label: 'Maintenance Reports' },
  ];

  const financialStats = [
    { title: 'Total Revenue', value: '$45,678', prefix: '$' },
    { title: 'Pending Payments', value: '$12,345', prefix: '$' },
    { title: 'Overdue Amount', value: '$3,456', prefix: '$' },
    { title: 'Monthly Collection', value: '$15,789', prefix: '$' },
  ];

  const occupancyStats = [
    { title: 'Total Rooms', value: '50' },
    { title: 'Occupied Rooms', value: '45' },
    { title: 'Vacant Rooms', value: '5' },
    { title: 'Occupancy Rate', value: '90%' },
  ];

  const maintenanceStats = [
    { title: 'Total Requests', value: '25' },
    { title: 'Pending Requests', value: '8' },
    { title: 'Completed Requests', value: '17' },
    { title: 'Average Response Time', value: '2.5h' },
  ];

  const columns = [
    {
      title: 'Report ID',
      dataIndex: 'id',
      key: 'id',
    },
    {
      title: 'Type',
      dataIndex: 'type',
      key: 'type',
    },
    {
      title: 'Generated Date',
      dataIndex: 'date',
      key: 'date',
    },
    {
      title: 'Generated By',
      dataIndex: 'generatedBy',
      key: 'generatedBy',
    },
    {
      title: 'Actions',
      key: 'actions',
      render: () => (
        <Space>
          <Button icon={<FilePdfOutlined />}>PDF</Button>
          <Button icon={<FileExcelOutlined />}>Excel</Button>
          <Button icon={<PrinterOutlined />}>Print</Button>
        </Space>
      ),
    },
  ];

  const data = [
    {
      id: 'REP-001',
      type: 'Financial Report',
      date: '2024-03-15',
      generatedBy: 'Admin',
    },
    {
      id: 'REP-002',
      type: 'Occupancy Report',
      date: '2024-03-14',
      generatedBy: 'Manager',
    },
    {
      id: 'REP-003',
      type: 'Maintenance Report',
      date: '2024-03-13',
      generatedBy: 'Admin',
    },
  ];

  return (
    <div className="ReportsStyle">
      <div className="header-section tabheader">Reports</div>
      <div className="tab-content">
        <div className="reports-header">
          <Space>
            <RangePicker
              onChange={(dates) => setDateRange(dates)}
              style={{ width: 300 }}
            />
            <Select
              value={reportType}
              onChange={setReportType}
              style={{ width: 200 }}
            >
              {reportTypes.map(type => (
                <Option key={type.key} value={type.key}>{type.label}</Option>
              ))}
            </Select>
            <Button type="primary" icon={<DownloadOutlined />}>
              Generate Report
            </Button>
          </Space>
        </div>

        <Tabs defaultActiveKey="financial">
          <TabPane tab="Financial Reports" key="financial">
            <Row gutter={[16, 16]} className="stats-row">
              {financialStats.map((stat, index) => (
                <Col xs={24} sm={12} md={6} key={index}>
                  <Card className="stat-card">
                    <Statistic
                      title={stat.title}
                      value={stat.value}
                      prefix={stat.prefix}
                    />
                  </Card>
                </Col>
              ))}
            </Row>
            <Card className="report-table">
              <Table columns={columns} dataSource={data} />
            </Card>
          </TabPane>

          <TabPane tab="Occupancy Reports" key="occupancy">
            <Row gutter={[16, 16]} className="stats-row">
              {occupancyStats.map((stat, index) => (
                <Col xs={24} sm={12} md={6} key={index}>
                  <Card className="stat-card">
                    <Statistic
                      title={stat.title}
                      value={stat.value}
                    />
                  </Card>
                </Col>
              ))}
            </Row>
            <Card className="report-table">
              <Table columns={columns} dataSource={data} />
            </Card>
          </TabPane>

          <TabPane tab="Maintenance Reports" key="maintenance">
            <Row gutter={[16, 16]} className="stats-row">
              {maintenanceStats.map((stat, index) => (
                <Col xs={24} sm={12} md={6} key={index}>
                  <Card className="stat-card">
                    <Statistic
                      title={stat.title}
                      value={stat.value}
                    />
                  </Card>
                </Col>
              ))}
            </Row>
            <Card className="report-table">
              <Table columns={columns} dataSource={data} />
            </Card>
          </TabPane>
        </Tabs>
      </div>
    </div>
  );
};

export default Reports;
